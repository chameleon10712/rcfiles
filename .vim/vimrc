" ============================================================================ "
" Vundle initialization
" ============================================================================ "

" no vi-compatible
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim

call vundle#begin()

" Plugins
Bundle 'VundleVim/Vundle.vim'
Bundle 'scrooloose/nerdtree'
Bundle 'jistr/vim-nerdtree-tabs'
Bundle 'tomtom/tcomment_vim'
Bundle 'tpope/vim-surround'
Bundle 'dhruvasagar/vim-table-mode'
Bundle 'pi314/pi314.boshiamy.vim'
Bundle 'pi314/pi314.asciiart.vim'
Bundle 'pi314/pi314.rst.vim'
Bundle 'pi314/todo-or-not-todo.vim'
Bundle 'zdict/zdict.vim'

call vundle#end()           " required
filetype plugin on          " required
" ============================================================================ "
" Vundle ok
" ============================================================================ "

" Encoding settings
set encoding=utf-8
set langmenu=zh_TW.UTF-8
language message zh_TW.UTF-8
set fileformat=unix

set ambiwidth=single

" Show mode on bottom-left
set showmode

" Show command on bottom-right
set showcmd

" ============== "
" Color settings "
" ============== "
syntax on
set hlsearch
set background=dark
set colorcolumn=80  " put a blue line on column 80
hi ColorColumn ctermbg=Blue
" change completion menu color
highlight Pmenu    ctermfg=White ctermbg=Blue gui=bold
highlight PmenuSel ctermfg=Black ctermbg=Cyan gui=bold

" Tabline setting in .vim/plugin/tabline.vim
hi TabLine     ctermfg=black ctermbg=grey     " not active tab page label
hi TabLineSel  ctermfg=grey  ctermbg=black    " active tab page label
hi TabLineFill ctermfg=grey  ctermbg=white    " fill the other place
hi VIMlogo     ctermfg=white ctermbg=blue

colorscheme pi314


" Tab charactor related settings
set expandtab       " changes user pressed TAB to spaces
set smarttab
set nosmartindent
set autoindent
set tabstop=4       " changes the width of the TAB character
set shiftwidth=4    " >>, <<, == width and automatic indent width
set softtabstop=4
set listchars=tab:>-
set list

set wrap

" Ignore case on searching
set ignorecase

" Show the coordinate of cursor
set ruler

" Enable backspace
set backspace=indent,eol,start

" Show line numbers
set number

" Status line
set laststatus=2
set wildmenu

set scrolloff=5

" tell vim don't create {filename}~
set nobackup
set nowritebackup
if exists('+persistent_undo')
    " tell vim don't create .{filename}.un~
    set noundofile
endif

" set fold method as marker
set foldmethod=marker

" Funny Setting
set norightleft

" Disable X11 clipboard, it help vim not hanging on start
set clipboard=exclude:.*

" new vertical split appear on right hand side
set splitright
set splitbelow

set pastetoggle=<leader>p

" ======== "
" Mappings "
" ======== "

" move moving between long wrapped lines
" must use nnoremap = no recursive map
nnoremap k gk
nnoremap j gj
vnoremap k gk
vnoremap j gj

nnoremap th :tabp<CR>
nnoremap tl :tabn<CR>
nnoremap tt :tabe<SPACE>
nnoremap tp :tabm -1<CR>
nnoremap tn :tabm +1<CR>
let g:NERDTreeMapOpenInTab='tt'
nnoremap t! :tabn 1<CR>
nnoremap t@ :tabn 2<CR>
nnoremap t# :tabn 3<CR>
nnoremap t$ :tabn 4<CR>
nnoremap t% :tabn 5<CR>
nnoremap t^ :tabn 6<CR>
nnoremap t& :tabn 7<CR>
nnoremap t* :tabn 8<CR>
nnoremap t( :tabn 9<CR>

" toggle the nerd tree
nnoremap <C-n> :NERDTreeTabsToggle<CR>

" Insert a new line in normal mode, I just lazy
nnoremap <CR> o<ESC>0D

" map these by hand
inoremap <C-h> <BS>
nnoremap <C-h> <BS>

" hot key for macro register ``q`` / ``z``
" Do register ``q`` / ``z``
nnoremap dq @q
nnoremap dz @z

" redraw syntax highlighting
nnoremap <leader><C-l> :syntax sync fromstart<CR>

" redraw, also wipe search highlighting
nnoremap <C-l> :noh<CR><C-l>

" convenient copy to system clipboard
vnoremap Y "*ygv<ESC>
nnoremap Y "*ygv<ESC>
vnoremap y ygv<ESC>

" QUIT!
command! Q execute "q!"
command! Qa execute "qa!"
command! QA execute "qa!"

" WRITE!
cnoremap w!! w !sudo tee %

" open file in new tab
nnoremap gF <C-w>gf

" indenting in visual mode
vnoremap > >gv
vnoremap < <gv

" automatically purge trailing space on save
autocmd BufWritePre * :%s/\s\+$//e

" status line, show plugin modes
function! VimTableModeStatusString ()
    if tablemode#IsActive()
        return '[table]'
    endif
    return ''
endfunction
set statusline=%<%{boshiamy#status()}%{VimTableModeStatusString()}%f\ %h%m%r%=%y\ %-14.(%l,%c%V%)\ %P

" =============== "
" Plugin settings "
" =============== "

" vim-table-mode settings ([normal] <leader>tm to enable table mode)
let g:table_mode_corner_corner = '+'
let g:table_mode_header_fillchar = '='

let g:todo_loop_checkbox = '<C-c>'
let g:todo_select_checkbox = '<C-k>'
